package patterh.proxy.dynamic;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;

public class MyInvocationHandler implements InvocationHandler {
	
	//被代理的对象
	private Object target = null;
	
	public MyInvocationHandler(Object _obj) {
		this.target = _obj;
	}
	@Override
	public Object invoke(Object arg0, Method arg1, Object[] arg2)
			throws Throwable {
		return null;
	}

}
